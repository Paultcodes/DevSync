[{"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\index.js":"1","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\App.js":"2","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\Home\\Homes.jsx":"3","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\SignUp\\SignUp.jsx":"4","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\mutations.js":"5","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\auth.js":"6"},{"size":200,"mtime":1677552430778,"results":"7","hashOfConfig":"8"},{"size":1365,"mtime":1677632885469,"results":"9","hashOfConfig":"8"},{"size":2432,"mtime":1677632678561,"results":"10","hashOfConfig":"8"},{"size":37649,"mtime":1677639019203,"results":"11","hashOfConfig":"8"},{"size":342,"mtime":1677639097593,"results":"12","hashOfConfig":"8"},{"size":1043,"mtime":1677548193859,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uudzry",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\index.js",[],["30","31"],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\App.js",["32"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Homesjsx from '../src/pages/Home/Homes';\nimport SignUp from './pages/SignUp/SignUp';\n\n\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Routes>\n          <Route path='/signup' element={<SignUp/>}/>\n        </Routes>\n      </Router>\n    \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\Home\\Homes.jsx",["33"],"import { FileOutlined, PieChartOutlined, UserOutlined,DesktopOutlined,TeamOutlined,SearchOutlined,BellOutlined,GithubOutlined} from '@ant-design/icons';\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\nimport { useState } from 'react';\nconst { Header, Content, Footer, Sider } = Layout;\nfunction getItem(label, key, icon, children) {\n  return {\n    key,\n    icon,\n    children,\n    label,\n  };\n}\nconst items = [\n  getItem('Home', '1', <PieChartOutlined />),\n  getItem('Profile', '2', <GithubOutlined />),\n  getItem('Search Groups', '3', <SearchOutlined />),\n  getItem('Groups', 'sub1', <UserOutlined />,[\n    getItem('Group1', '3'),\n    getItem('Group2', '4'),\n    getItem('Group3', '5'),\n  ]\n  ),\n  getItem('My Groups', 'sub2',<TeamOutlined/>, [\n    getItem('Tom', '3'),\n    getItem('Bill', '4'),\n    getItem('Alex', '5'),\n  ]),\n  getItem('Hyper Docs', 'sub2', <FileOutlined />),\n  getItem('Notifications', '9', <BellOutlined />),\n];\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const {\n    token: { colorBgContainer },\n  } = theme.useToken();\n  return (\n    <Layout\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n        <div\n          style={{\n            height: 32,\n            margin: 16,\n            background: 'rgba(255, 255, 255, 0.2)',\n          }}\n        />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" items={items} />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          style={{\n            padding: 0,\n            background: colorBgContainer,\n          }}\n        />\n        <Content\n          style={{\n            margin: '0 16px',\n          }}\n        >\n          <Breadcrumb\n            style={{\n              margin: '16px 0',\n            }}\n          >\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Bill</Breadcrumb.Item>\n          </Breadcrumb>\n          <div\n            style={{\n              padding: 24,\n              minHeight: 360,\n              background: colorBgContainer,\n            }}\n          >\n            \n          </div>\n          \n        </Content>\n        <Footer\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          Ant Design Â©2023 Created by Ant UED\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\nexport default App;","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\SignUp\\SignUp.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\mutations.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\auth.js",["34"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":10,"column":8,"nodeType":"41","messageId":"42","endLine":10,"endColumn":16},{"ruleId":"39","severity":1,"message":"43","line":1,"column":55,"nodeType":"41","messageId":"42","endLine":1,"endColumn":70},{"ruleId":"44","severity":1,"message":"45","line":41,"column":1,"nodeType":"46","endLine":41,"endColumn":34},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Homesjsx' is defined but never used.","Identifier","unusedVar","'DesktopOutlined' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
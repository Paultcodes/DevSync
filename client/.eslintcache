[{"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\index.js":"1","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\App.js":"2","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\mutations.js":"3","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\auth.js":"4","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\HomePage\\HomePage.jsx":"6","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\HomeCards\\HomeCard.jsx":"7","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\HomeCards\\CardContent.js":"8","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\GroupPage\\GroupPage.jsx":"9","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskPage.jsx":"10","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskCard.jsx":"11","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskManager.jsx":"12","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupNavbar\\navbar.jsx":"13","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupChat\\GroupChat.jsx":"14","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\SignupPage\\SignupPage.jsx":"15","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\inputs\\Inputs.jsx":"16","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\buttons\\Buttons.jsx":"17","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\CreateGroup\\CreateGroupPage.jsx":"18","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\MemberSection\\MemberSection.jsx":"19","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\UserCards\\UseCard.jsx":"20","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupNavbar\\style.js":"21","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\Navbar\\NavbarContent.js":"22","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupSettings\\GroupSettings.jsx":"23","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\MyGroups\\MyGroupsPage.jsx":"24","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\queries.js":"25"},{"size":200,"mtime":1677552430778,"results":"26","hashOfConfig":"27"},{"size":1922,"mtime":1677749723786,"results":"28","hashOfConfig":"27"},{"size":663,"mtime":1677738118974,"results":"29","hashOfConfig":"27"},{"size":1046,"mtime":1677730544981,"results":"30","hashOfConfig":"27"},{"size":1885,"mtime":1677746743661,"results":"31","hashOfConfig":"27"},{"size":1199,"mtime":1677724008870,"results":"32","hashOfConfig":"27"},{"size":252,"mtime":1677685359362,"results":"33","hashOfConfig":"27"},{"size":1051,"mtime":1677685515454,"results":"34","hashOfConfig":"27"},{"size":1185,"mtime":1677747534887,"results":"35","hashOfConfig":"27"},{"size":478,"mtime":1677724382322,"results":"36","hashOfConfig":"27"},{"size":479,"mtime":1677716376872,"results":"37","hashOfConfig":"27"},{"size":1906,"mtime":1677717295932,"results":"38","hashOfConfig":"27"},{"size":2077,"mtime":1677747839899,"results":"39","hashOfConfig":"27"},{"size":2307,"mtime":1677734561579,"results":"40","hashOfConfig":"27"},{"size":1963,"mtime":1677738225817,"results":"41","hashOfConfig":"27"},{"size":1245,"mtime":1677725657176,"results":"42","hashOfConfig":"27"},{"size":2482,"mtime":1677725484417,"results":"43","hashOfConfig":"27"},{"size":2909,"mtime":1677731317075,"results":"44","hashOfConfig":"27"},{"size":301,"mtime":1677736300563,"results":"45","hashOfConfig":"27"},{"size":491,"mtime":1677736201170,"results":"46","hashOfConfig":"27"},{"size":184,"mtime":1677747299805,"results":"47","hashOfConfig":"27"},{"size":380,"mtime":1677746500810,"results":"48","hashOfConfig":"27"},{"size":212,"mtime":1677747697142,"results":"49","hashOfConfig":"27"},{"size":416,"mtime":1677751635723,"results":"50","hashOfConfig":"27"},{"size":232,"mtime":1677751242953,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1uudzry",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\index.js",[],["109","110"],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\App.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\mutations.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\auth.js",["111"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\Navbar\\Navbar.jsx",["112"],"import './navbar.css';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport auth from '../../utils/auth';\r\n\r\nimport { loggedInContent } from './NavbarContent';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-brand\">\r\n        <a href=\"/\" className=\"navbar-logo\">\r\n          DevSync\r\n        </a>\r\n        <button className=\"navbar-toggle\" onClick={toggleMenu}>\r\n          {menuOpen ? '✕' : '☰'}\r\n        </button>\r\n      </div>\r\n      <ul className={`navbar-menu${menuOpen ? ' navbar-menu--open' : ''}`}>\r\n        <li className=\"navbar-item\">\r\n          <Link to=\"/\" className=\"navbar-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n        {auth.loggedIn() &&\r\n          loggedInContent.map(({ route, name }) => {\r\n            return (\r\n              <li className=\"navbar-item\">\r\n                <Link className=\"navbar-link\" to={route}>\r\n                  {name}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n\r\n        {auth.loggedIn() ? (\r\n          <li className=\"navbar-item\">\r\n            <a onClick={auth.logout} className=\"navbar-link\">\r\n              Logout\r\n            </a>\r\n          </li>\r\n        ) : (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <li className=\"navbar-item\">\r\n              <a onClick={auth.logout} href=\"/logout\" className=\"navbar-link\">\r\n                Login\r\n              </a>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <a onClick={auth.logout} href=\"/signup\" className=\"navbar-link\">\r\n                Sign up\r\n              </a>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\HomeCards\\HomeCard.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\HomeCards\\CardContent.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\GroupPage\\GroupPage.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskPage.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskCard.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\TaskManager\\TaskManager.jsx",["113"],"import React, { useState } from 'react';\r\nimport './TaskManagerStyle.css';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst TaskForm = ({ onSave }) => {\r\n  const [task, setTask] = useState({ assignee: '', description: '', type: '' });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setTask({ ...task, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSave(task);\r\n    setTask({ assignee: '', description: '', type: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"task-form\">\r\n        <label className=\"task-form__label\">\r\n          Assignee:\r\n          <input\r\n            type=\"text\"\r\n            name=\"assignee\"\r\n            value={task.assignee}\r\n            onChange={handleInputChange}\r\n            className=\"task-form__input\"\r\n          />\r\n        </label>\r\n        <label className=\"task-form__label\">\r\n          Description:\r\n          <textarea\r\n            name=\"description\"\r\n            value={task.description}\r\n            onChange={handleInputChange}\r\n            className=\"task-form__input\"\r\n          />\r\n        </label>\r\n        <label className=\"task-form__label\">\r\n          Type:\r\n          <select\r\n            name=\"type\"\r\n            value={task.type}\r\n            onChange={handleInputChange}\r\n            className=\"task-form__input\"\r\n          >\r\n            <option value=\"\">Select a task type</option>\r\n            <option value=\"front-end\">Front-end</option>\r\n            <option value=\"back-end\">Back-end</option>\r\n            <option value=\"styling\">Styling</option>\r\n            <option value=\"database-work\">Database work</option>\r\n          </select>\r\n        </label>\r\n        <button type=\"submit\" className=\"task-form__button\">\r\n          Create Task\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupNavbar\\navbar.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupChat\\GroupChat.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\SignupPage\\SignupPage.jsx",["114","115","116","117"],"import { useMutation } from '@apollo/client';\r\nimport { useState } from 'react';\r\n\r\nimport './signup.css';\r\n\r\nimport { SIGNUP_USER } from '../../utils/mutations';\r\nimport { InputOne, InputTwo, InputThree } from '../../components/inputs/Inputs';\r\nimport { ButtonOne } from '../../components/buttons/Buttons';\r\n\r\nimport auth from '../../utils/auth';\r\n\r\nconst SignupPage = () => {\r\n  const [createUser, { data, error }] = useMutation(SIGNUP_USER);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(formData);\r\n\r\n    try {\r\n      const { data } = await createUser({\r\n        variables: { ...formData },\r\n      });\r\n      console.log(data.createUser);\r\n      auth.login(data.createUser.token);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    console.log(formData);\r\n  };\r\n  return (\r\n    <div className=\"signup-form\">\r\n      <h1>Sign Up!</h1>\r\n      <div className=\"signup-inputs\">\r\n      <InputTwo\r\n          onChange={handleChange}\r\n          name=\"firstName\"\r\n          placeholder=\"First name\"\r\n        />\r\n         <InputTwo\r\n          onChange={handleChange}\r\n          name=\"lastName\"\r\n          placeholder=\"Last name\"\r\n        />\r\n        <InputTwo\r\n          onChange={handleChange}\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n        />\r\n        <InputTwo onChange={handleChange} name=\"email\" placeholder=\"Email\" />\r\n        <InputTwo\r\n        type='password'\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <ButtonOne onClick={handleSubmit} buttonName=\"Submit\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\inputs\\Inputs.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\buttons\\Buttons.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\CreateGroup\\CreateGroupPage.jsx",["118","119","120","121"],"import { useState } from 'react';\r\nimport { InputOne, InputTwo } from '../../components/inputs/Inputs';\r\nimport { ButtonOne } from '../../components/buttons/Buttons';\r\nimport HomeCard from '../../components/HomeCards/HomeCard';\r\nimport './creategroup.css';\r\n\r\nimport auth from '../../utils/auth';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_GROUP } from '../../utils/mutations';\r\n\r\nconst CreateGroupPage = () => {\r\n  const [createGroup, { data, error }] = useMutation(CREATE_GROUP);\r\n  const [groupType, setGroupType] = useState('open');\r\n\r\n  const [groupForm, setGroupForm] = useState({\r\n    groupName: '',\r\n    type: 'open',\r\n  });\r\n\r\n  const handleRadioChange = (event) => {\r\n    setGroupType(event.target.value);\r\n\r\n    setGroupForm((prevState) => ({\r\n      ...prevState,\r\n      type: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setGroupForm((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const token = auth.loggedIn() ? auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const { data } = await createGroup({\r\n        variables: { ...groupForm },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create-form\">\r\n      <h1>Create Your Group</h1>\r\n      <div>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"groupType\"\r\n              value=\"open\"\r\n              checked={groupType === 'open'}\r\n              onChange={handleRadioChange}\r\n            />\r\n            Open Group\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"groupType\"\r\n              value=\"private\"\r\n              checked={groupType === 'private'}\r\n              onChange={handleRadioChange}\r\n            />\r\n            Private Group\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"create-group-input\">\r\n        <InputTwo\r\n          name=\"groupName\"\r\n          onChange={handleChange}\r\n          placeholder=\"Group name\"\r\n        />\r\n        <ButtonOne buttonName=\"Submit\" onClick={handleSubmit} />\r\n      </div>\r\n      <div className=\"card-section\">\r\n        <HomeCard\r\n          title=\"Group type\"\r\n          text=\"lorem asdfasjflkd asjdfk asjfk ask jdfaskdlf jaskld fjaskd fjaskld fjaskldd jf\"\r\n        />\r\n        <HomeCard\r\n          title=\"Test\"\r\n          text=\"lorem asdfasjflkd asjdfk asjfk ask jdfaskdlf jaskld fjaskd fjaskld fjaskldd jf\"\r\n        />\r\n        <HomeCard\r\n          title=\"Why?\"\r\n          text=\"lorem asdfasjflkd asjdfk asjfk ask jdfaskdlf jaskld fjaskd fjaskld fjaskldd jf\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateGroupPage;\r\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\MemberSection\\MemberSection.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\UserCards\\UseCard.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupNavbar\\style.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\Navbar\\NavbarContent.js",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\components\\GroupSettings\\GroupSettings.jsx",[],"C:\\Users\\pault\\devSync\\DevSync\\client\\src\\pages\\MyGroups\\MyGroupsPage.jsx",["122"],"import { useQuery } from '@apollo/client';\r\n\r\nimport { GET_ME } from '../../utils/queries';\r\n\r\nconst MyGroupsPage = () => {\r\n  const { loading, data } = useQuery(GET_ME);\r\n  console.log(data)\r\n\r\n  const userData = data?.me.ownedGroups || [];\r\n\r\n  console.log(userData);\r\n  return <div>\r\n    {userData.map((data) => {\r\n        return <h1>{data.groupName}</h1>\r\n    })}\r\n  </div>;\r\n};\r\n\r\nexport default MyGroupsPage;\r\n","C:\\Users\\pault\\devSync\\DevSync\\client\\src\\utils\\queries.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":41,"column":1,"nodeType":"129","endLine":41,"endColumn":34},{"ruleId":"130","severity":1,"message":"131","line":47,"column":13,"nodeType":"132","endLine":47,"endColumn":62},{"ruleId":"133","severity":1,"message":"134","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":18},{"ruleId":"133","severity":1,"message":"138","line":7,"column":30,"nodeType":"135","messageId":"136","endLine":7,"endColumn":40},{"ruleId":"133","severity":1,"message":"139","line":13,"column":24,"nodeType":"135","messageId":"136","endLine":13,"endColumn":28},{"ruleId":"133","severity":1,"message":"140","line":13,"column":30,"nodeType":"135","messageId":"136","endLine":13,"endColumn":35},{"ruleId":"133","severity":1,"message":"137","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":18},{"ruleId":"133","severity":1,"message":"139","line":13,"column":25,"nodeType":"135","messageId":"136","endLine":13,"endColumn":29},{"ruleId":"133","severity":1,"message":"140","line":13,"column":31,"nodeType":"135","messageId":"136","endLine":13,"endColumn":36},{"ruleId":"133","severity":1,"message":"139","line":47,"column":15,"nodeType":"135","messageId":"136","endLine":47,"endColumn":19},{"ruleId":"133","severity":1,"message":"141","line":6,"column":11,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'TaskCard' is defined but never used.","Identifier","unusedVar","'InputOne' is defined but never used.","'InputThree' is defined but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]